[{"C:\\Users\\yungo\\vscode\\test\\frontend\\src\\App.js":"1","C:\\Users\\yungo\\vscode\\test\\frontend\\src\\index.js":"2","C:\\Users\\yungo\\vscode\\test\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\yungo\\vscode\\test\\frontend\\src\\Calendar.js":"4","C:\\Users\\yungo\\vscode\\test\\frontend\\src\\Header.js":"5"},{"size":12385,"mtime":1606501702872,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1606499817166,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1606486336621,"results":"9","hashOfConfig":"7"},{"size":4328,"mtime":1606499861405,"results":"10","hashOfConfig":"7"},{"size":1132,"mtime":1606499861441,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"t1afmr",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\yungo\\vscode\\test\\frontend\\src\\App.js",["23","24","25","26"],"C:\\Users\\yungo\\vscode\\test\\frontend\\src\\index.js",[],"C:\\Users\\yungo\\vscode\\test\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\yungo\\vscode\\test\\frontend\\src\\Calendar.js",["27"],"import React, { Component } from 'react'\r\nimport moment from 'moment';\r\n\r\nclass DateHeader extends Component {\r\n\r\n  dateToArray = (dates) => {\r\n    if (Array.isArray(dates)) {\r\n      return dates\r\n    } else if (typeof dates === \"string\") {\r\n      return dates.split(',')\r\n    } else {\r\n      return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\r\n    }\r\n  }\r\n\r\n  mapArrayToDate = (dateArray) => {\r\n    try {\r\n      if (dateArray.length !== 7) {\r\n        console.log(new Error(\"dates props must be had 7 date\"))\r\n        dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\r\n      }\r\n\r\n      return dateArray.map((date, index) => {\r\n        const className = () => {\r\n          let className = \"RCA-calendar-date-component\";\r\n          if (index === 0) {\r\n            return className + \" date-sun\"\r\n          } else if (index === 6) {\r\n            return className + \" date-sat\"\r\n          } else {\r\n            return className + \" date-weekday\"\r\n          }\r\n        }\r\n        return (\r\n          <div className={className()} key={\"RCA-header-\" + date}>\r\n            {date}\r\n          </div>\r\n        )\r\n      })\r\n    } catch{\r\n      throw new Error(\"date must be string or component\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"RCA-calendar-date-header\">\r\n        {this.mapArrayToDate(this.dateToArray(this.props.dates))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Week extends Component {\r\n\r\n  state = {}\r\n\r\n  Days = (firstDayFormat,weekIndex) => {\r\n    const _days = [];\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n\r\n      const Day = moment(firstDayFormat).add(i,'d');\r\n      _days.push({\r\n        yearMonthDayFormat: Day.format(\"YYYY-MM-DD\"),\r\n        getDay: Day.format('D'),\r\n        isHolyDay: false,\r\n        weekIndex\r\n      });\r\n    }\r\n\r\n    return _days;\r\n  }\r\n\r\n  mapDaysToComponents = (Days,calendarMonthYear ,selectedDayFormat ,fn = () => { }) => {\r\n\r\n    const thisMonth = moment(calendarMonthYear);\r\n    return Days.map((dayInfo, i) => {\r\n      let className = \"date-weekday-label\";\r\n\r\n      if (!thisMonth.isSame(dayInfo.yearMonthDayFormat,'month')) {\r\n        className = \"date-notThisMonth\";\r\n      } else if (i === 0) {\r\n        className = \"date-sun\"\r\n      }else if(i===6){\r\n        className =\"date-sat\"\r\n      }\r\n\r\n      if(moment(dayInfo.yearMonthDayFormat).isSame(selectedDayFormat,'day')){\r\n        className = \"selected\"\r\n      }\r\n\r\n      return (\r\n        <div className={\"RCA-calendar-day \" + className} key={`RCA-${dayInfo.weekIndex}-${i}-day`}onClick={() => fn(dayInfo.yearMonthDayFormat)}>\r\n          <div className=\"RCA-calendar-day-label label\">\r\n            {dayInfo.getDay}\r\n          </div>\r\n          <div>\r\n          {this.props.schedule.map((info, i) => {\r\n            if (dayInfo.yearMonthDayFormat === info.date) {\r\n                return (<div className={\"text-right font-semibold schedule\" + info.id%10}>{info.title}</div>)\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"RCA-calendar-week\">\r\n        {this.mapDaysToComponents(this.Days(this.props.firstDayOfThisWeekformat,this.props.weekIndex),\r\n        this.props.ymOfThisCalendar,\r\n        this.props.selected,\r\n        this.props.fn\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class Calendar extends Component {\r\n\r\n  Weeks = (monthYear,selected,clickFn) => {\r\n    const firstDayOfMonth = moment(monthYear).startOf('month');\r\n    const firstDateOfMonth = firstDayOfMonth.get('d');\r\n\r\n    const firstDayOfWeek = firstDayOfMonth.clone().add(-firstDateOfMonth,'d');\r\n    \r\n    const _Weeks = [];\r\n    for (let i = 0; i < 6; i++) {\r\n      _Weeks.push((\r\n        <Week key={`RCA-calendar-week-${i}`}\r\n        weekIndex={i}\r\n        ymOfThisCalendar={firstDayOfMonth.format(\"YYYY-MM\")}\r\n        firstDayOfThisWeekformat={firstDayOfWeek.clone().add(i * 7,'d').format(\"YYYY-MM-DD\")}\r\n        selected={selected}\r\n          fn={clickFn}\r\n          schedule={ this.props.schedule }\r\n        />\r\n      ))\r\n    }\r\n    return _Weeks\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"RCA-calendar-container\">\r\n        <DateHeader dates={\"Sun, Mon, Tue, Wed, Thu, Fri, Sat\"} />\r\n        {this.Weeks(this.props.YM,this.props.selected,this.props.changeSelected)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\yungo\\vscode\\test\\frontend\\src\\Header.js",[],{"ruleId":"28","severity":1,"message":"29","line":5,"column":10,"nodeType":"30","messageId":"31","endLine":5,"endColumn":22},{"ruleId":"32","severity":1,"message":"33","line":64,"column":85,"nodeType":"34","messageId":"35","endLine":64,"endColumn":86},{"ruleId":"36","severity":1,"message":"37","line":225,"column":163,"nodeType":"38","messageId":"39","endLine":225,"endColumn":165},{"ruleId":"40","severity":1,"message":"41","line":231,"column":41,"nodeType":"42","endLine":231,"endColumn":88},{"ruleId":"36","severity":1,"message":"37","line":99,"column":46,"nodeType":"38","messageId":"39","endLine":99,"endColumn":48},"no-unused-vars","'confirmAlert' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]